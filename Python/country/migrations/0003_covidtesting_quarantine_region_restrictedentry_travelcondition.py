# Generated by Django 3.2 on 2021-04-16 02:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('user', '0002_alter_userprofile_status'),
        ('country', '0002_country_iso_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('safety_level', models.CharField(choices=[('safe', 'Very Safe'), ('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], max_length=15)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='country.country')),
            ],
        ),
        migrations.CreateModel(
            name='TravelCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_days', models.IntegerField()),
                ('notes', models.TextField()),
                ('groups_covered', models.ManyToManyField(blank=True, related_name='included_travel_conditions', to='user.UserStatus')),
                ('groups_excluded', models.ManyToManyField(blank=True, related_name='excluded_travel_conditions', to='user.UserStatus')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_country.travelcondition_set+', to='contenttypes.contenttype')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restrictions', to='country.region')),
                ('regions_covered', models.ManyToManyField(blank=True, related_name='origin_restrictions', to='country.Region')),
                ('regions_excluded', models.ManyToManyField(blank=True, related_name='origin_restrictions_excluded', to='country.Region')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='CovidTesting',
            fields=[
                ('travelcondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='country.travelcondition')),
                ('start_hours', models.IntegerField()),
                ('end_hours', models.IntegerField()),
                ('designated_labs_only', models.BooleanField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('country.travelcondition',),
        ),
        migrations.CreateModel(
            name='Quarantine',
            fields=[
                ('travelcondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='country.travelcondition')),
                ('start_day', models.IntegerField()),
                ('end_day', models.IntegerField()),
                ('type', models.CharField(choices=[('designated', 'Designated Hotel'), ('hotel_other', 'Any Hotel'), ('government', 'Government Arranged'), ('home', 'Home Quarantine'), ('monitoring', 'Self Monitoring')], max_length=15)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('country.travelcondition',),
        ),
        migrations.CreateModel(
            name='RestrictedEntry',
            fields=[
                ('travelcondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='country.travelcondition')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('country.travelcondition',),
        ),
    ]
